<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The micronaut-java-parent module preconfigure all the version and plugins, so you only need to add it as your parent! -->
    <parent>
        <groupId>io.archimedesfw.maven.micronaut</groupId>
        <artifactId>micronaut-java-parent</artifactId>
        <version>4.5.0</version>
    </parent>

    <groupId>io.archimedesfw.maven.micronaut.example</groupId>
    <artifactId>micronaut-java-parent-example</artifactId>
    <version>0.0.1</version>
    <packaging>pom</packaging>

    <properties>
        <packaging>docker</packaging> <!-- Micronaut will create a Docker image to run the application -->

        <!-- Use Micronaut TestResources during test execution!!! -->
        <!-- This facilitates automatically starting the necessary test containers for integration tests.
             For example, to run a dockerized PostgreSQL instance, etc. -->
        <micronaut.test.resources.enabled>true</micronaut.test.resources.enabled>
    </properties>

    <modules>
        <module>domain</module>
        <module>rest</module>
    </modules>

    <dependencies>
        <!-- Add the Micronaut dependencies you want to use -->
        <!-- Do not worry about versions, they are preconfigured in micronaut-kotlin-parent that uses the official Micronaut BOM -->
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.validation</groupId>
            <artifactId>micronaut-validation</artifactId>
        </dependency>

        <!-- Use Micronaut Serialization instead of Jackson library -->
        <dependency>
            <groupId>io.micronaut.serde</groupId>
            <artifactId>micronaut-serde-jackson</artifactId>
        </dependency>

        <!-- Logging system is already integrated with Micronaut, so only need to add the dependency to use it -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Add typical dependencies for testing with Junit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Use Micronaut Test Resources for managing external resources which are required during development or testing.
             For example, to run a dockerized PostgreSQL for integration tests -->
        <dependency>
            <groupId>io.micronaut.testresources</groupId>
            <artifactId>micronaut-test-resources-client</artifactId>
            <scope>provided</scope> <!-- This allows you to use Micronaut Test Resources when mvn mn:run -->
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- This configuration is typically unnecessary because TestResources automagically infers the
                     required containers based on your dependencies. However, it can be useful in multi-module projects
                     to ensure all modules can run the correct containers independently of their dependencies. -->
                <plugin>
                    <groupId>io.micronaut.maven</groupId>
                    <artifactId>micronaut-maven-plugin</artifactId>
                    <configuration>
                        <classpathInference>false</classpathInference>
                        <testResourcesDependencies>
                            <dependency>
                                <groupId>io.micronaut.testresources</groupId>
                                <artifactId>micronaut-test-resources-jdbc-postgresql</artifactId>
                            </dependency>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                            </dependency>
                        </testResourcesDependencies>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <!-- Activate integration tests (*IT.kt) -->
                <!-- This plugin is preconfigured in micronaut-base-parent, so you only need to declare it -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <name>${project.artifactId}</name>
    <description>Java parent example.</description>
    <url>https://www.archimedesfw.io/</url>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>manual</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git://github.com/archimedes-projects/archimedes-maven-micronaut-examples.git</connection>
        <developerConnection>scm:git:ssh://github.com:archimedes-projects/archimedes-maven-micronaut-examples.git</developerConnection>
        <tag>main</tag>
        <url>https://github.com/archimedes-projects/archimedes-maven-micronaut-examples</url>
    </scm>
    <developers>
        <developer>
            <id>alejandropg</id>
            <name>Alejandro PÃ©rez</name>
        </developer>
    </developers>

</project>
